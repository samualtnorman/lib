root: true

overrides:
  - files:
      - "**/*.js"
      - "**/*.ts"

parser: "@typescript-eslint/parser"

parserOptions:
  project:
    - ./src/tsconfig.json
    - ./tsconfig.json

plugins:
  - "@typescript-eslint"
  - unicorn
  - eslint-comments
  - write-good-comments
  - array-func
  - regexp
  - optimize-regex

extends:
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:unicorn/recommended
  - plugin:eslint-comments/recommended
  - plugin:array-func/recommended
  - plugin:regexp/recommended

rules:
  no-undef: off
  "@typescript-eslint/no-explicit-any": off
  "@typescript-eslint/no-non-null-assertion": off
  no-await-in-loop: warn
  no-unmodified-loop-condition: warn
  no-unreachable-loop: warn
  no-unused-private-class-members: warn
  require-atomic-updates: warn
  class-methods-use-this: warn
  default-case-last: warn
  "@typescript-eslint/default-param-last": warn
  "@typescript-eslint/dot-notation": warn
  no-else-return: warn
  no-extra-bind: warn
  no-extra-boolean-cast: warn
  no-extra-label: warn
  no-floating-decimal: warn
  no-implicit-coercion: warn
  no-lonely-if: warn
  no-mixed-operators: warn
  no-multi-assign: warn
  no-negated-condition: warn
  no-new: warn
  no-new-object: warn
  no-new-wrappers: warn
  no-return-await: warn
  no-sequences: warn
  no-unneeded-ternary: warn
  "@typescript-eslint/no-unused-expressions": warn
  no-useless-call: warn
  no-useless-computed-key: warn
  no-useless-concat: warn
  no-useless-rename: warn
  no-useless-return: warn
  operator-assignment: warn
  prefer-arrow-callback: warn
  prefer-exponentiation-operator: warn
  prefer-named-capture-group: warn
  prefer-numeric-literals: warn
  # prefer-object-has-own: warn
  prefer-object-spread: warn
  prefer-promise-reject-errors: warn
  prefer-regex-literals: warn
  prefer-rest-params: warn
  prefer-spread: warn
  prefer-template: warn
  radix: warn
  yoda: warn
  arrow-spacing: warn
  "@typescript-eslint/brace-style": warn
  "@typescript-eslint/comma-dangle": warn
  "@typescript-eslint/comma-spacing": warn
  comma-style: warn
  computed-property-spacing: warn
  eol-last: warn
  "@typescript-eslint/func-call-spacing": warn
  key-spacing: warn
  "@typescript-eslint/keyword-spacing": warn
  linebreak-style: warn
  new-parens: warn
  no-multi-spaces: warn
  no-whitespace-before-property: warn
  semi-spacing: warn
  space-before-blocks: warn
  space-in-parens: warn
  "@typescript-eslint/space-infix-ops": warn
  space-unary-ops: warn
  switch-colon-spacing: warn
  template-curly-spacing: warn
  template-tag-spacing: warn
  unicode-bom: warn
  wrap-iife: warn
  yield-star-spacing: warn
  "@typescript-eslint/array-type": warn
  "@typescript-eslint/class-literal-property-style": warn
  "@typescript-eslint/consistent-indexed-object-style": warn
  "@typescript-eslint/consistent-type-assertions": warn
  "@typescript-eslint/member-ordering": warn
  "@typescript-eslint/method-signature-style": warn
  "@typescript-eslint/no-base-to-string": warn
  "@typescript-eslint/no-confusing-non-null-assertion": warn
  "@typescript-eslint/no-extraneous-class": warn
  "@typescript-eslint/no-invalid-void-type": warn
  "@typescript-eslint/no-meaningless-void-operator": warn
  "@typescript-eslint/no-non-null-asserted-nullish-coalescing": warn
  "@typescript-eslint/no-unnecessary-boolean-literal-compare": warn
  "@typescript-eslint/no-unnecessary-qualifier": warn
  "@typescript-eslint/no-unnecessary-type-arguments": warn
  "@typescript-eslint/non-nullable-type-assertion-style": warn
  "@typescript-eslint/prefer-for-of": warn
  "@typescript-eslint/prefer-function-type": warn
  "@typescript-eslint/prefer-includes": warn
  "@typescript-eslint/prefer-literal-enum-member": warn
  # "@typescript-eslint/prefer-optional-chain": warn
  "@typescript-eslint/prefer-readonly": warn
  "@typescript-eslint/prefer-reduce-type-parameter": warn
  "@typescript-eslint/prefer-regexp-exec": warn
  "@typescript-eslint/prefer-return-this-type": warn
  "@typescript-eslint/prefer-ts-expect-error": warn
  "@typescript-eslint/switch-exhaustiveness-check": warn
  "@typescript-eslint/type-annotation-spacing": warn
  "@typescript-eslint/unified-signatures": warn
  unicorn/prefer-node-protocol: off
  unicorn/import-style: off
  unicorn/prefer-number-properties: off
  unicorn/explicit-length-check: off
  unicorn/no-await-expression-member: off
  unicorn/no-null: off
  unicorn/import-index: warn
  unicorn/no-unsafe-regex: warn
  unicorn/no-unused-properties: warn
  # unicorn/prefer-string-replace-all: warn
  # unicorn/prefer-top-level-await: warn
  eslint-comments/no-unused-disable: warn
  eslint-comments/require-description: warn
  write-good-comments/write-good-comments: warn
  array-func/prefer-array-from: off
  unicorn/filename-case: off
  unicorn/prefer-code-point: off

  no-constant-condition:
    - warn
    - checkLoops: false

  no-empty:
    - warn
    - allowEmptyCatch: true

  "@typescript-eslint/no-unused-vars":
    - warn
    - args: none

  "@typescript-eslint/quotes":
    - warn
    - backtick

  curly:
    - warn
    - multi-or-nest

  prefer-const:
    - warn
    - destructuring: all

  camelcase:
    - warn
    - properties: never

  consistent-this:
    - warn
    - self

  func-style:
    - warn
    - declaration

  grouped-accessor-pairs:
    - warn
    - getBeforeSet

  "@typescript-eslint/semi":
    - warn
    - never

  semi-style:
    - warn
    - last

  one-var:
    - warn
    - never

  quote-props:
    - warn
    - as-needed

  array-bracket-spacing:
    - warn
    - always

  arrow-parens:
    - warn
    - as-needed

  dot-location:
    - warn
    - property

  generator-star-spacing:
    - warn
    - after

  # "@typescript-eslint/indent":
  #   - warn
  #   - tab

  no-multiple-empty-lines:
    - warn
    - max: 1

  nonblock-statement-body-position:
    - warn
    - below

  object-curly-newline:
    - warn
    - multiline: true

  "@typescript-eslint/object-curly-spacing":
    - warn
    - always

  object-property-newline:
    - warn
    - allowAllPropertiesOnSameLine: true

  operator-linebreak:
    - warn
    - before

  padded-blocks:
    - warn
    - never

  "@typescript-eslint/padding-line-between-statements":
    - warn

    - blankLine: always
      prev: "*"
      next: "*"

    - blankLine: never
      prev: import
      next: import

    - blankLine: any
      prev: const
      next: const

    - blankLine: never
      prev: const
      next: let

    - blankLine: always
      prev: multiline-block-like
      next: "*"

    - blankLine: always
      prev: "*"
      next: multiline-block-like

    - blankLine: always
      prev: multiline-const
      next: "*"

    - blankLine: always
      prev: "*"
      next: multiline-const

    - blankLine: always
      prev: multiline-expression
      next: "*"

    - blankLine: always
      prev: "*"
      next: multiline-expression

    - blankLine: always
      prev: multiline-let
      next: "*"

    - blankLine: always
      prev: "*"
      next: multiline-let

    - blankLine: always
      prev: multiline-var
      next: "*"

    - blankLine: always
      prev: "*"
      next: multiline-var

    - blankLine: any
      prev: block-like
      next: break

    - blankLine: any
      prev: case
      next: case

    - blankLine: never
      prev: expression
      next: expression

    - blankLine: never
      prev: let
      next: let

    - blankLine: always
      prev: multiline-expression
      next: "*"

    - blankLine: always
      prev: "*"
      next: multiline-expression

    - blankLine: any
      prev: export
      next: export

  rest-spread-spacing:
    - warn
    - never

  "@typescript-eslint/space-before-function-paren":
    - warn
    - anonymous: never
      named: never
      asyncArrow: always

  "@typescript-eslint/consistent-type-definitions":
    - warn
    - type

  "@typescript-eslint/consistent-type-exports":
    - warn
    - fixMixedExportsWithInlineTypeSpecifier: false

  "@typescript-eslint/member-delimiter-style":
    - warn
    - multiline:
        delimiter: none
        requireLast: false
      singleline:
        delimiter: comma
        requireLast: false

  "@typescript-eslint/consistent-type-imports":
    - warn
    - prefer: no-type-imports
      disallowTypeAnnotations: false

  "@typescript-eslint/no-confusing-void-expression":
    - warn
    - ignoreArrowShorthand: true

  "@typescript-eslint/no-empty-function":
    - warn
    - allow:
      - arrowFunctions

  "@typescript-eslint/no-unnecessary-condition":
    - warn
    - allowConstantLoopConditions: true

  "@typescript-eslint/require-array-sort-compare":
    - warn
    - ignoreStringArrays: true

  unicorn/better-regex:
    - warn
    - sortCharacterClasses: false

  unicorn/prevent-abbreviations:
    - warn
    - checkFilenames: false

  optimize-regex/optimize-regex:
    - warn
    - blacklist:
      - charClassClassrangesMerge

  "@typescript-eslint/lines-between-class-members":
    - warn
    - allowSingleLine: true
