export { assert } from "./assert"
export { asyncReplace } from "./asyncReplace"
export { BitStream } from "./BitStream"
export { bufferToString, stringToBuffer } from "./bufferToString"
export { clamp } from "./clamp"
export { clearObject } from "./clearObject"
export { combineAsyncGeneratorsParallel } from "./combineAsyncGeneratorsParallel"
export { copyFilePersistent } from "./copyFilePersistent"
export { countHackmudCharacters } from "./countHackmudCharacters"
export { createErrorClass } from "./createErrorClass"
export { deeplyEquals } from "./deeplyEquals"
export { DynamicMap } from "./DynamicMap"
export { findFiles } from "./findFiles"
export { findMatches } from "./findMatches"
export { getBigIntWidth } from "./getBigIntWidth"
export { getDeepObjectProperty } from "./getDeepObjectProperty"
export { is } from "./is"
export { isGenerator } from "./isGenerator"
export { isRecord } from "./isRecord"
export { iterateInParallel } from "./iterateInParallel"
export { iterateXY } from "./iterateXY"
export { lerp } from "./lerp"
export { memoizeFunction } from "./memoizeFunction"
export { objectHasOwn } from "./objectHasOwn"
export { positionToLine } from "./positionToLine"
export { raceAllPromises } from "./raceAllPromises"
export { retry } from "./retry"
export { shuffle } from "./shuffle"
export { sigmoid } from "./sigmoid"
export { spliceString } from "./spliceString"
export { toLEB128 } from "./toLEB128"
export { tryCatch } from "./tryCatch"
export { wait } from "./wait"
export { writeFilePersistent } from "./writeFilePersistent"

export type LaxPartial<T> = { [P in keyof T]?: T[P] | undefined }
export type JSONValue = null | boolean | number | string | JSONValue[] | { [key: string]: JSONValue }
export type RemoveFirst<T extends any[]> = T extends [ any, ...infer Rest ] ? Rest : never
